{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashuka\\\\Documents\\\\face-recognition-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css'; //You must add your own API key here from Clarifai.\n\nconst particlesOptions = {\n  //customize this to your liking\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ashuka/Documents/face-recognition-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\n//You must add your own API key here from Clarifai.\r\nconst particlesOptions = {\r\n\r\n  //customize this to your liking\r\n\r\n  particles: {\r\n\r\n    number: {\r\n\r\n      value: 30,\r\n\r\n      density: {\r\n\r\n        enable: true,\r\n\r\n        value_area: 800\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n\r\n  input: '',\r\n\r\n  imageUrl: '',\r\n\r\n  box: {},\r\n\r\n  route: 'signin',\r\n\r\n  isSignedIn: false,\r\n\r\n  user: {\r\n\r\n    id: '',\r\n\r\n    name: '',\r\n\r\n    email: '',\r\n\r\n    entries: 0,\r\n\r\n    joined: ''\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this.state = initialState;\r\n\r\n  }\r\n\r\n\r\n\r\n  loadUser = (data) => {\r\n\r\n    this.setState({user: {\r\n\r\n      id: data.id,\r\n\r\n      name: data.name,\r\n\r\n      email: data.email,\r\n\r\n      entries: data.entries,\r\n\r\n      joined: data.joined\r\n\r\n    }})\r\n\r\n  }\r\n\r\n\r\n\r\n  calculateFaceLocation = (data) => {\r\n\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n\r\n    const image = document.getElementById('inputimage');\r\n\r\n    const width = Number(image.width);\r\n\r\n    const height = Number(image.height);\r\n\r\n    return {\r\n\r\n      leftCol: clarifaiFace.left_col * width,\r\n\r\n      topRow: clarifaiFace.top_row * height,\r\n\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  displayFaceBox = (box) => {\r\n\r\n    this.setState({box: box});\r\n\r\n  }\r\n\r\n\r\n\r\n  onInputChange = (event) => {\r\n\r\n    this.setState({input: event.target.value});\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonSubmit = () => {\r\n\r\n    this.setState({imageUrl: this.state.input});\r\n\r\n      fetch('http://localhost:3000/imageurl', {\r\n\r\n        method: 'post',\r\n\r\n        headers: {'Content-Type': 'application/json'},\r\n\r\n        body: JSON.stringify({\r\n\r\n          input: this.state.input\r\n\r\n        })\r\n\r\n      })\r\n\r\n      .then(response => response.json())\r\n\r\n      .then(response => {\r\n\r\n        if (response) {\r\n\r\n          fetch('http://localhost:3000/image', {\r\n\r\n            method: 'put',\r\n\r\n            headers: {'Content-Type': 'application/json'},\r\n\r\n            body: JSON.stringify({\r\n\r\n              id: this.state.user.id\r\n\r\n            })\r\n\r\n          })\r\n\r\n            .then(response => response.json())\r\n\r\n            .then(count => {\r\n\r\n              this.setState(Object.assign(this.state.user, { entries: count}))\r\n\r\n            })\r\n\r\n            .catch(console.log)\r\n\r\n\r\n\r\n        }\r\n\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n\r\n      })\r\n\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n\r\n\r\n  onRouteChange = (route) => {\r\n\r\n    if (route === 'signout') {\r\n\r\n      this.setState(initialState)\r\n\r\n    } else if (route === 'home') {\r\n\r\n      this.setState({isSignedIn: true})\r\n\r\n    }\r\n\r\n    this.setState({route: route});\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n         <Particles className='particles'\r\n\r\n          params={particlesOptions}\r\n\r\n        />\r\n\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n\r\n        { route === 'home'\r\n\r\n          ? <div>\r\n\r\n              <Logo />\r\n\r\n              <Rank\r\n\r\n                name={this.state.user.name}\r\n\r\n                entries={this.state.user.entries}\r\n\r\n              />\r\n\r\n              <ImageLinkForm\r\n\r\n                onInputChange={this.onInputChange}\r\n\r\n                onButtonSubmit={this.onButtonSubmit}\r\n\r\n              />\r\n\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n\r\n            </div>\r\n\r\n          : (\r\n\r\n             route === 'signin'\r\n\r\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n\r\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n\r\n            )\r\n\r\n        }\r\n\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}